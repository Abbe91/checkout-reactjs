{"ast":null,"code":"// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n(function (Math) {\n  var trimLeft = /^\\s+/,\n      trimRight = /\\s+$/,\n      tinyCounter = 0,\n      mathRound = Math.round,\n      mathMin = Math.min,\n      mathMax = Math.max,\n      mathRandom = Math.random;\n\n  function tinycolor(color, opts) {\n    color = color ? color : '';\n    opts = opts || {}; // If input is already a tinycolor, return itself\n\n    if (color instanceof tinycolor) {\n      return color;\n    } // If we are called as a function, call using new instead\n\n\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType; // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n\n    if (this._r < 1) {\n      this._r = mathRound(this._r);\n    }\n\n    if (this._g < 1) {\n      this._g = mathRound(this._g);\n    }\n\n    if (this._b < 1) {\n      this._b = mathRound(this._b);\n    }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n  }\n\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n\n      if (RsRGB <= 0.03928) {\n        R = RsRGB / 12.92;\n      } else {\n        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      }\n\n      if (GsRGB <= 0.03928) {\n        G = GsRGB / 12.92;\n      } else {\n        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      }\n\n      if (BsRGB <= 0.03928) {\n        B = BsRGB / 12.92;\n      } else {\n        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = mathRound(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return {\n        h: hsv.h * 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: this._a\n      };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = mathRound(hsv.h * 360),\n          s = mathRound(hsv.s * 100),\n          v = mathRound(hsv.v * 100);\n      return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return {\n        h: hsl.h * 360,\n        s: hsl.s,\n        l: hsl.l,\n        a: this._a\n      };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = mathRound(hsl.h * 360),\n          s = mathRound(hsl.s * 100),\n          l = mathRound(hsl.l * 100);\n      return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return {\n        r: mathRound(this._r),\n        g: mathRound(this._g),\n        b: mathRound(this._b),\n        a: this._a\n      };\n    },\n    toRgbString: function () {\n      return this._a == 1 ? \"rgb(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" : \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function () {\n      return {\n        r: mathRound(bound01(this._r, 255) * 100) + \"%\",\n        g: mathRound(bound01(this._g, 255) * 100) + \"%\",\n        b: mathRound(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1 ? \"rgb(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n\n      if (this._a < 1) {\n        return false;\n      }\n\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n\n      return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n\n        return this.toRgbString();\n      }\n\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function () {\n      return this._applyCombination(triad, arguments);\n    },\n    tetrad: function () {\n      return this._applyCombination(tetrad, arguments);\n    }\n  }; // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == \"object\") {\n      var newColor = {};\n\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n\n      color = newColor;\n    }\n\n    return tinycolor(color, opts);\n  }; // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n\n\n  function inputToRGB(color) {\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n\n    a = boundAlpha(a);\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: mathMin(255, mathMax(rgb.r, 0)),\n      g: mathMin(255, mathMax(rgb.g, 0)),\n      b: mathMin(255, mathMax(rgb.b, 0)),\n      a: a\n    };\n  } // Conversion Functions\n  // --------------------\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n\n\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  } // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n\n\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = mathMax(r, g, b),\n        min = mathMin(r, g, b);\n    var h,\n        s,\n        l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  } // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n\n\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  } // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n\n\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = mathMax(r, g, b),\n        min = mathMin(r, g, b);\n    var h,\n        s,\n        v = max;\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return {\n      h: h,\n      s: s,\n      v: v\n    };\n  } // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n\n\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  } // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n\n\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; // Return a 3 character hex if possible\n\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n  } // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n\n\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16)), pad2(convertDecimalToHex(a))]; // Return a 4 character hex if possible\n\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n  } // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n\n\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];\n    return hex.join(\"\");\n  } // `equals`\n  // Can be called with any tinycolor input\n\n\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) {\n      return false;\n    }\n\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: mathRandom(),\n      g: mathRandom(),\n      b: mathRandom()\n    });\n  }; // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  } // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n\n\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  } // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n\n  function triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 120) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 240) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n\n  function tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 90) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 180) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 270) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n\n    return ret;\n  }\n\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n        s = hsv.s,\n        v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n      ret.push(tinycolor({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n\n    return ret;\n  } // Utility Functions\n  // ---------------------\n\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return tinycolor(rgba);\n  }; // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n\n\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n  }; // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n\n\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n    out = false;\n    wcag2Parms = validateWCAG2Parms(wcag2);\n\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n\n    return out;\n  }; // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n\n\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\n      \"level\": level,\n      \"size\": size\n    }) || !includeFallbackColors) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  }; // Big List of Colors\n  // ------------------\n  // <http://www.w3.org/TR/css3-color/#svg-color>\n\n\n  var names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n  }; // Make it easy to access colors via `hexNames[hex]`\n\n  var hexNames = tinycolor.hexNames = flip(names); // Utilities\n  // ---------\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n\n  function flip(o) {\n    var flipped = {};\n\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n\n    return flipped;\n  } // Return a valid alpha value [0,1] with all invalid values being set to 1\n\n\n  function boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n\n    return a;\n  } // Take input from [0, n] and return it as [0, 1]\n\n\n  function bound01(n, max) {\n    if (isOnePointZero(n)) {\n      n = \"100%\";\n    }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n))); // Automatically convert percentage into number\n\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    } // Handle floating point rounding errors\n\n\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    } // Convert into [0, 1] range if it isn't already\n\n\n    return n % max / parseFloat(max);\n  } // Force a number between 0 and 1\n\n\n  function clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n  } // Parse a base-16 hex value into a base-10 integer\n\n\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  } // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n\n\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n  } // Check to see if string passed in is a percentage\n\n\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n  } // Force a hex value to have 2 characters\n\n\n  function pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n  } // Replace a decimal with it's percentage value\n\n\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n\n    return n;\n  } // Converts a decimal to a hex value\n\n\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  } // Converts a hex value to a decimal\n\n\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n\n  var matchers = function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\"; // <http://www.w3.org/TR/css3-values/#number-value>\n\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\"; // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\"; // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  }(); // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n\n\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  } // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n\n\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n    var named = false;\n\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == 'transparent') {\n      return {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        format: \"name\"\n      };\n    } // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n\n\n    var match;\n\n    if (match = matchers.rgb.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3]\n      };\n    }\n\n    if (match = matchers.rgba.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hsl.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3]\n      };\n    }\n\n    if (match = matchers.hsla.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hsv.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3]\n      };\n    }\n\n    if (match = matchers.hsva.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hex8.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n\n    if (match = matchers.hex6.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n\n    if (match = matchers.hex4.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        a: convertHexToDecimal(match[4] + '' + match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n\n    if (match = matchers.hex3.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + '' + match[1]),\n        g: parseIntFromHex(match[2] + '' + match[2]),\n        b: parseIntFromHex(match[3] + '' + match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n\n    return false;\n  }\n\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\n      \"level\": \"AA\",\n      \"size\": \"small\"\n    };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n\n    return {\n      \"level\": level,\n      \"size\": size\n    };\n  } // Node: Export function\n\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n  } // AMD/requirejs: Define the module\n  else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return tinycolor;\n      });\n    } // Browser: Expose to window\n    else {\n        window.tinycolor = tinycolor;\n      }\n})(Math);","map":{"version":3,"sources":["C:/Users/wODe/Desktop/School WIE19/Reactkurs/Checkout/checkout-reactjs/node_modules/tinycolor2/tinycolor.js"],"names":["Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","tinycolor","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","amount","clamp01","hue","results","slices","part","ret","push","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","module","exports","define","amd","window"],"mappings":"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","sourcesContent":["// TinyColor v1.4.1\r\n// https://github.com/bgrins/TinyColor\r\n// Brian Grinstead, MIT License\r\n\r\n(function(Math) {\r\n\r\nvar trimLeft = /^\\s+/,\r\n    trimRight = /\\s+$/,\r\n    tinyCounter = 0,\r\n    mathRound = Math.round,\r\n    mathMin = Math.min,\r\n    mathMax = Math.max,\r\n    mathRandom = Math.random;\r\n\r\nfunction tinycolor (color, opts) {\r\n\r\n    color = (color) ? color : '';\r\n    opts = opts || { };\r\n\r\n    // If input is already a tinycolor, return itself\r\n    if (color instanceof tinycolor) {\r\n       return color;\r\n    }\r\n    // If we are called as a function, call using new instead\r\n    if (!(this instanceof tinycolor)) {\r\n        return new tinycolor(color, opts);\r\n    }\r\n\r\n    var rgb = inputToRGB(color);\r\n    this._originalInput = color,\r\n    this._r = rgb.r,\r\n    this._g = rgb.g,\r\n    this._b = rgb.b,\r\n    this._a = rgb.a,\r\n    this._roundA = mathRound(100*this._a) / 100,\r\n    this._format = opts.format || rgb.format;\r\n    this._gradientType = opts.gradientType;\r\n\r\n    // Don't let the range of [0,255] come back in [0,1].\r\n    // Potentially lose a little bit of precision here, but will fix issues where\r\n    // .5 gets interpreted as half of the total, instead of half of 1\r\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n    if (this._r < 1) { this._r = mathRound(this._r); }\r\n    if (this._g < 1) { this._g = mathRound(this._g); }\r\n    if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n    this._ok = rgb.ok;\r\n    this._tc_id = tinyCounter++;\r\n}\r\n\r\ntinycolor.prototype = {\r\n    isDark: function() {\r\n        return this.getBrightness() < 128;\r\n    },\r\n    isLight: function() {\r\n        return !this.isDark();\r\n    },\r\n    isValid: function() {\r\n        return this._ok;\r\n    },\r\n    getOriginalInput: function() {\r\n      return this._originalInput;\r\n    },\r\n    getFormat: function() {\r\n        return this._format;\r\n    },\r\n    getAlpha: function() {\r\n        return this._a;\r\n    },\r\n    getBrightness: function() {\r\n        //http://www.w3.org/TR/AERT#color-contrast\r\n        var rgb = this.toRgb();\r\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n    },\r\n    getLuminance: function() {\r\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n        var rgb = this.toRgb();\r\n        var RsRGB, GsRGB, BsRGB, R, G, B;\r\n        RsRGB = rgb.r/255;\r\n        GsRGB = rgb.g/255;\r\n        BsRGB = rgb.b/255;\r\n\r\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\r\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\r\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\r\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\r\n    },\r\n    setAlpha: function(value) {\r\n        this._a = boundAlpha(value);\r\n        this._roundA = mathRound(100*this._a) / 100;\r\n        return this;\r\n    },\r\n    toHsv: function() {\r\n        var hsv = rgbToHsv(this._r, this._g, this._b);\r\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n    },\r\n    toHsvString: function() {\r\n        var hsv = rgbToHsv(this._r, this._g, this._b);\r\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n        return (this._a == 1) ?\r\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n    },\r\n    toHsl: function() {\r\n        var hsl = rgbToHsl(this._r, this._g, this._b);\r\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n    },\r\n    toHslString: function() {\r\n        var hsl = rgbToHsl(this._r, this._g, this._b);\r\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n        return (this._a == 1) ?\r\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n    },\r\n    toHex: function(allow3Char) {\r\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n    },\r\n    toHexString: function(allow3Char) {\r\n        return '#' + this.toHex(allow3Char);\r\n    },\r\n    toHex8: function(allow4Char) {\r\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\r\n    },\r\n    toHex8String: function(allow4Char) {\r\n        return '#' + this.toHex8(allow4Char);\r\n    },\r\n    toRgb: function() {\r\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n    },\r\n    toRgbString: function() {\r\n        return (this._a == 1) ?\r\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n    },\r\n    toPercentageRgb: function() {\r\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n    },\r\n    toPercentageRgbString: function() {\r\n        return (this._a == 1) ?\r\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n    },\r\n    toName: function() {\r\n        if (this._a === 0) {\r\n            return \"transparent\";\r\n        }\r\n\r\n        if (this._a < 1) {\r\n            return false;\r\n        }\r\n\r\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n    },\r\n    toFilter: function(secondColor) {\r\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\r\n        var secondHex8String = hex8String;\r\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n        if (secondColor) {\r\n            var s = tinycolor(secondColor);\r\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\r\n        }\r\n\r\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n    },\r\n    toString: function(format) {\r\n        var formatSet = !!format;\r\n        format = format || this._format;\r\n\r\n        var formattedString = false;\r\n        var hasAlpha = this._a < 1 && this._a >= 0;\r\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\r\n\r\n        if (needsAlphaFormat) {\r\n            // Special case for \"transparent\", all other non-alpha formats\r\n            // will return rgba when there is transparency.\r\n            if (format === \"name\" && this._a === 0) {\r\n                return this.toName();\r\n            }\r\n            return this.toRgbString();\r\n        }\r\n        if (format === \"rgb\") {\r\n            formattedString = this.toRgbString();\r\n        }\r\n        if (format === \"prgb\") {\r\n            formattedString = this.toPercentageRgbString();\r\n        }\r\n        if (format === \"hex\" || format === \"hex6\") {\r\n            formattedString = this.toHexString();\r\n        }\r\n        if (format === \"hex3\") {\r\n            formattedString = this.toHexString(true);\r\n        }\r\n        if (format === \"hex4\") {\r\n            formattedString = this.toHex8String(true);\r\n        }\r\n        if (format === \"hex8\") {\r\n            formattedString = this.toHex8String();\r\n        }\r\n        if (format === \"name\") {\r\n            formattedString = this.toName();\r\n        }\r\n        if (format === \"hsl\") {\r\n            formattedString = this.toHslString();\r\n        }\r\n        if (format === \"hsv\") {\r\n            formattedString = this.toHsvString();\r\n        }\r\n\r\n        return formattedString || this.toHexString();\r\n    },\r\n    clone: function() {\r\n        return tinycolor(this.toString());\r\n    },\r\n\r\n    _applyModification: function(fn, args) {\r\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n        this._r = color._r;\r\n        this._g = color._g;\r\n        this._b = color._b;\r\n        this.setAlpha(color._a);\r\n        return this;\r\n    },\r\n    lighten: function() {\r\n        return this._applyModification(lighten, arguments);\r\n    },\r\n    brighten: function() {\r\n        return this._applyModification(brighten, arguments);\r\n    },\r\n    darken: function() {\r\n        return this._applyModification(darken, arguments);\r\n    },\r\n    desaturate: function() {\r\n        return this._applyModification(desaturate, arguments);\r\n    },\r\n    saturate: function() {\r\n        return this._applyModification(saturate, arguments);\r\n    },\r\n    greyscale: function() {\r\n        return this._applyModification(greyscale, arguments);\r\n    },\r\n    spin: function() {\r\n        return this._applyModification(spin, arguments);\r\n    },\r\n\r\n    _applyCombination: function(fn, args) {\r\n        return fn.apply(null, [this].concat([].slice.call(args)));\r\n    },\r\n    analogous: function() {\r\n        return this._applyCombination(analogous, arguments);\r\n    },\r\n    complement: function() {\r\n        return this._applyCombination(complement, arguments);\r\n    },\r\n    monochromatic: function() {\r\n        return this._applyCombination(monochromatic, arguments);\r\n    },\r\n    splitcomplement: function() {\r\n        return this._applyCombination(splitcomplement, arguments);\r\n    },\r\n    triad: function() {\r\n        return this._applyCombination(triad, arguments);\r\n    },\r\n    tetrad: function() {\r\n        return this._applyCombination(tetrad, arguments);\r\n    }\r\n};\r\n\r\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n// String input requires \"1.0\" as input, so 1 will be treated as 1\r\ntinycolor.fromRatio = function(color, opts) {\r\n    if (typeof color == \"object\") {\r\n        var newColor = {};\r\n        for (var i in color) {\r\n            if (color.hasOwnProperty(i)) {\r\n                if (i === \"a\") {\r\n                    newColor[i] = color[i];\r\n                }\r\n                else {\r\n                    newColor[i] = convertToPercentage(color[i]);\r\n                }\r\n            }\r\n        }\r\n        color = newColor;\r\n    }\r\n\r\n    return tinycolor(color, opts);\r\n};\r\n\r\n// Given a string or object, convert that input to RGB\r\n// Possible string inputs:\r\n//\r\n//     \"red\"\r\n//     \"#f00\" or \"f00\"\r\n//     \"#ff0000\" or \"ff0000\"\r\n//     \"#ff000000\" or \"ff000000\"\r\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n//\r\nfunction inputToRGB(color) {\r\n\r\n    var rgb = { r: 0, g: 0, b: 0 };\r\n    var a = 1;\r\n    var s = null;\r\n    var v = null;\r\n    var l = null;\r\n    var ok = false;\r\n    var format = false;\r\n\r\n    if (typeof color == \"string\") {\r\n        color = stringInputToObject(color);\r\n    }\r\n\r\n    if (typeof color == \"object\") {\r\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\r\n            rgb = rgbToRgb(color.r, color.g, color.b);\r\n            ok = true;\r\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n        }\r\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\r\n            s = convertToPercentage(color.s);\r\n            v = convertToPercentage(color.v);\r\n            rgb = hsvToRgb(color.h, s, v);\r\n            ok = true;\r\n            format = \"hsv\";\r\n        }\r\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\r\n            s = convertToPercentage(color.s);\r\n            l = convertToPercentage(color.l);\r\n            rgb = hslToRgb(color.h, s, l);\r\n            ok = true;\r\n            format = \"hsl\";\r\n        }\r\n\r\n        if (color.hasOwnProperty(\"a\")) {\r\n            a = color.a;\r\n        }\r\n    }\r\n\r\n    a = boundAlpha(a);\r\n\r\n    return {\r\n        ok: ok,\r\n        format: color.format || format,\r\n        r: mathMin(255, mathMax(rgb.r, 0)),\r\n        g: mathMin(255, mathMax(rgb.g, 0)),\r\n        b: mathMin(255, mathMax(rgb.b, 0)),\r\n        a: a\r\n    };\r\n}\r\n\r\n\r\n// Conversion Functions\r\n// --------------------\r\n\r\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n// `rgbToRgb`\r\n// Handle bounds / percentage checking to conform to CSS color spec\r\n// <http://www.w3.org/TR/css3-color/>\r\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n// *Returns:* { r, g, b } in [0, 255]\r\nfunction rgbToRgb(r, g, b){\r\n    return {\r\n        r: bound01(r, 255) * 255,\r\n        g: bound01(g, 255) * 255,\r\n        b: bound01(b, 255) * 255\r\n    };\r\n}\r\n\r\n// `rgbToHsl`\r\n// Converts an RGB color value to HSL.\r\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n// *Returns:* { h, s, l } in [0,1]\r\nfunction rgbToHsl(r, g, b) {\r\n\r\n    r = bound01(r, 255);\r\n    g = bound01(g, 255);\r\n    b = bound01(b, 255);\r\n\r\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n    var h, s, l = (max + min) / 2;\r\n\r\n    if(max == min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch(max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n\r\n    return { h: h, s: s, l: l };\r\n}\r\n\r\n// `hslToRgb`\r\n// Converts an HSL color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\nfunction hslToRgb(h, s, l) {\r\n    var r, g, b;\r\n\r\n    h = bound01(h, 360);\r\n    s = bound01(s, 100);\r\n    l = bound01(l, 100);\r\n\r\n    function hue2rgb(p, q, t) {\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    if(s === 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n\r\n    return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n\r\n// `rgbToHsv`\r\n// Converts an RGB color value to HSV\r\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n// *Returns:* { h, s, v } in [0,1]\r\nfunction rgbToHsv(r, g, b) {\r\n\r\n    r = bound01(r, 255);\r\n    g = bound01(g, 255);\r\n    b = bound01(b, 255);\r\n\r\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n    var h, s, v = max;\r\n\r\n    var d = max - min;\r\n    s = max === 0 ? 0 : d / max;\r\n\r\n    if(max == min) {\r\n        h = 0; // achromatic\r\n    }\r\n    else {\r\n        switch(max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return { h: h, s: s, v: v };\r\n}\r\n\r\n// `hsvToRgb`\r\n// Converts an HSV color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\n function hsvToRgb(h, s, v) {\r\n\r\n    h = bound01(h, 360) * 6;\r\n    s = bound01(s, 100);\r\n    v = bound01(v, 100);\r\n\r\n    var i = Math.floor(h),\r\n        f = h - i,\r\n        p = v * (1 - s),\r\n        q = v * (1 - f * s),\r\n        t = v * (1 - (1 - f) * s),\r\n        mod = i % 6,\r\n        r = [v, q, p, p, t, v][mod],\r\n        g = [t, v, v, q, p, p][mod],\r\n        b = [p, p, t, v, v, q][mod];\r\n\r\n    return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n\r\n// `rgbToHex`\r\n// Converts an RGB color to hex\r\n// Assumes r, g, and b are contained in the set [0, 255]\r\n// Returns a 3 or 6 character hex\r\nfunction rgbToHex(r, g, b, allow3Char) {\r\n\r\n    var hex = [\r\n        pad2(mathRound(r).toString(16)),\r\n        pad2(mathRound(g).toString(16)),\r\n        pad2(mathRound(b).toString(16))\r\n    ];\r\n\r\n    // Return a 3 character hex if possible\r\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n    }\r\n\r\n    return hex.join(\"\");\r\n}\r\n\r\n// `rgbaToHex`\r\n// Converts an RGBA color plus alpha transparency to hex\r\n// Assumes r, g, b are contained in the set [0, 255] and\r\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\r\nfunction rgbaToHex(r, g, b, a, allow4Char) {\r\n\r\n    var hex = [\r\n        pad2(mathRound(r).toString(16)),\r\n        pad2(mathRound(g).toString(16)),\r\n        pad2(mathRound(b).toString(16)),\r\n        pad2(convertDecimalToHex(a))\r\n    ];\r\n\r\n    // Return a 4 character hex if possible\r\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\r\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n    }\r\n\r\n    return hex.join(\"\");\r\n}\r\n\r\n// `rgbaToArgbHex`\r\n// Converts an RGBA color to an ARGB Hex8 string\r\n// Rarely used, but required for \"toFilter()\"\r\nfunction rgbaToArgbHex(r, g, b, a) {\r\n\r\n    var hex = [\r\n        pad2(convertDecimalToHex(a)),\r\n        pad2(mathRound(r).toString(16)),\r\n        pad2(mathRound(g).toString(16)),\r\n        pad2(mathRound(b).toString(16))\r\n    ];\r\n\r\n    return hex.join(\"\");\r\n}\r\n\r\n// `equals`\r\n// Can be called with any tinycolor input\r\ntinycolor.equals = function (color1, color2) {\r\n    if (!color1 || !color2) { return false; }\r\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\r\n};\r\n\r\ntinycolor.random = function() {\r\n    return tinycolor.fromRatio({\r\n        r: mathRandom(),\r\n        g: mathRandom(),\r\n        b: mathRandom()\r\n    });\r\n};\r\n\r\n\r\n// Modification Functions\r\n// ----------------------\r\n// Thanks to less.js for some of the basics here\r\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\nfunction desaturate(color, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 10);\r\n    var hsl = tinycolor(color).toHsl();\r\n    hsl.s -= amount / 100;\r\n    hsl.s = clamp01(hsl.s);\r\n    return tinycolor(hsl);\r\n}\r\n\r\nfunction saturate(color, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 10);\r\n    var hsl = tinycolor(color).toHsl();\r\n    hsl.s += amount / 100;\r\n    hsl.s = clamp01(hsl.s);\r\n    return tinycolor(hsl);\r\n}\r\n\r\nfunction greyscale(color) {\r\n    return tinycolor(color).desaturate(100);\r\n}\r\n\r\nfunction lighten (color, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 10);\r\n    var hsl = tinycolor(color).toHsl();\r\n    hsl.l += amount / 100;\r\n    hsl.l = clamp01(hsl.l);\r\n    return tinycolor(hsl);\r\n}\r\n\r\nfunction brighten(color, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 10);\r\n    var rgb = tinycolor(color).toRgb();\r\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n    return tinycolor(rgb);\r\n}\r\n\r\nfunction darken (color, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 10);\r\n    var hsl = tinycolor(color).toHsl();\r\n    hsl.l -= amount / 100;\r\n    hsl.l = clamp01(hsl.l);\r\n    return tinycolor(hsl);\r\n}\r\n\r\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n// Values outside of this range will be wrapped into this range.\r\nfunction spin(color, amount) {\r\n    var hsl = tinycolor(color).toHsl();\r\n    var hue = (hsl.h + amount) % 360;\r\n    hsl.h = hue < 0 ? 360 + hue : hue;\r\n    return tinycolor(hsl);\r\n}\r\n\r\n// Combination Functions\r\n// ---------------------\r\n// Thanks to jQuery xColor for some of the ideas behind these\r\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\nfunction complement(color) {\r\n    var hsl = tinycolor(color).toHsl();\r\n    hsl.h = (hsl.h + 180) % 360;\r\n    return tinycolor(hsl);\r\n}\r\n\r\nfunction triad(color) {\r\n    var hsl = tinycolor(color).toHsl();\r\n    var h = hsl.h;\r\n    return [\r\n        tinycolor(color),\r\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n    ];\r\n}\r\n\r\nfunction tetrad(color) {\r\n    var hsl = tinycolor(color).toHsl();\r\n    var h = hsl.h;\r\n    return [\r\n        tinycolor(color),\r\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n    ];\r\n}\r\n\r\nfunction splitcomplement(color) {\r\n    var hsl = tinycolor(color).toHsl();\r\n    var h = hsl.h;\r\n    return [\r\n        tinycolor(color),\r\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n    ];\r\n}\r\n\r\nfunction analogous(color, results, slices) {\r\n    results = results || 6;\r\n    slices = slices || 30;\r\n\r\n    var hsl = tinycolor(color).toHsl();\r\n    var part = 360 / slices;\r\n    var ret = [tinycolor(color)];\r\n\r\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n        hsl.h = (hsl.h + part) % 360;\r\n        ret.push(tinycolor(hsl));\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction monochromatic(color, results) {\r\n    results = results || 6;\r\n    var hsv = tinycolor(color).toHsv();\r\n    var h = hsv.h, s = hsv.s, v = hsv.v;\r\n    var ret = [];\r\n    var modification = 1 / results;\r\n\r\n    while (results--) {\r\n        ret.push(tinycolor({ h: h, s: s, v: v}));\r\n        v = (v + modification) % 1;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n// Utility Functions\r\n// ---------------------\r\n\r\ntinycolor.mix = function(color1, color2, amount) {\r\n    amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n    var rgb1 = tinycolor(color1).toRgb();\r\n    var rgb2 = tinycolor(color2).toRgb();\r\n\r\n    var p = amount / 100;\r\n\r\n    var rgba = {\r\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\r\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\r\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\r\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\r\n    };\r\n\r\n    return tinycolor(rgba);\r\n};\r\n\r\n\r\n// Readability Functions\r\n// ---------------------\r\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\r\n\r\n// `contrast`\r\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\r\ntinycolor.readability = function(color1, color2) {\r\n    var c1 = tinycolor(color1);\r\n    var c2 = tinycolor(color2);\r\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\r\n};\r\n\r\n// `isReadable`\r\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\r\n// The third argument is an optional Object.\r\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\r\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\r\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\r\n\r\n// *Example*\r\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\r\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\r\ntinycolor.isReadable = function(color1, color2, wcag2) {\r\n    var readability = tinycolor.readability(color1, color2);\r\n    var wcag2Parms, out;\r\n\r\n    out = false;\r\n\r\n    wcag2Parms = validateWCAG2Parms(wcag2);\r\n    switch (wcag2Parms.level + wcag2Parms.size) {\r\n        case \"AAsmall\":\r\n        case \"AAAlarge\":\r\n            out = readability >= 4.5;\r\n            break;\r\n        case \"AAlarge\":\r\n            out = readability >= 3;\r\n            break;\r\n        case \"AAAsmall\":\r\n            out = readability >= 7;\r\n            break;\r\n    }\r\n    return out;\r\n\r\n};\r\n\r\n// `mostReadable`\r\n// Given a base color and a list of possible foreground or background\r\n// colors for that base, returns the most readable color.\r\n// Optionally returns Black or White if the most readable color is unreadable.\r\n// *Example*\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\r\ntinycolor.mostReadable = function(baseColor, colorList, args) {\r\n    var bestColor = null;\r\n    var bestScore = 0;\r\n    var readability;\r\n    var includeFallbackColors, level, size ;\r\n    args = args || {};\r\n    includeFallbackColors = args.includeFallbackColors ;\r\n    level = args.level;\r\n    size = args.size;\r\n\r\n    for (var i= 0; i < colorList.length ; i++) {\r\n        readability = tinycolor.readability(baseColor, colorList[i]);\r\n        if (readability > bestScore) {\r\n            bestScore = readability;\r\n            bestColor = tinycolor(colorList[i]);\r\n        }\r\n    }\r\n\r\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\r\n        return bestColor;\r\n    }\r\n    else {\r\n        args.includeFallbackColors=false;\r\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\r\n    }\r\n};\r\n\r\n\r\n// Big List of Colors\r\n// ------------------\r\n// <http://www.w3.org/TR/css3-color/#svg-color>\r\nvar names = tinycolor.names = {\r\n    aliceblue: \"f0f8ff\",\r\n    antiquewhite: \"faebd7\",\r\n    aqua: \"0ff\",\r\n    aquamarine: \"7fffd4\",\r\n    azure: \"f0ffff\",\r\n    beige: \"f5f5dc\",\r\n    bisque: \"ffe4c4\",\r\n    black: \"000\",\r\n    blanchedalmond: \"ffebcd\",\r\n    blue: \"00f\",\r\n    blueviolet: \"8a2be2\",\r\n    brown: \"a52a2a\",\r\n    burlywood: \"deb887\",\r\n    burntsienna: \"ea7e5d\",\r\n    cadetblue: \"5f9ea0\",\r\n    chartreuse: \"7fff00\",\r\n    chocolate: \"d2691e\",\r\n    coral: \"ff7f50\",\r\n    cornflowerblue: \"6495ed\",\r\n    cornsilk: \"fff8dc\",\r\n    crimson: \"dc143c\",\r\n    cyan: \"0ff\",\r\n    darkblue: \"00008b\",\r\n    darkcyan: \"008b8b\",\r\n    darkgoldenrod: \"b8860b\",\r\n    darkgray: \"a9a9a9\",\r\n    darkgreen: \"006400\",\r\n    darkgrey: \"a9a9a9\",\r\n    darkkhaki: \"bdb76b\",\r\n    darkmagenta: \"8b008b\",\r\n    darkolivegreen: \"556b2f\",\r\n    darkorange: \"ff8c00\",\r\n    darkorchid: \"9932cc\",\r\n    darkred: \"8b0000\",\r\n    darksalmon: \"e9967a\",\r\n    darkseagreen: \"8fbc8f\",\r\n    darkslateblue: \"483d8b\",\r\n    darkslategray: \"2f4f4f\",\r\n    darkslategrey: \"2f4f4f\",\r\n    darkturquoise: \"00ced1\",\r\n    darkviolet: \"9400d3\",\r\n    deeppink: \"ff1493\",\r\n    deepskyblue: \"00bfff\",\r\n    dimgray: \"696969\",\r\n    dimgrey: \"696969\",\r\n    dodgerblue: \"1e90ff\",\r\n    firebrick: \"b22222\",\r\n    floralwhite: \"fffaf0\",\r\n    forestgreen: \"228b22\",\r\n    fuchsia: \"f0f\",\r\n    gainsboro: \"dcdcdc\",\r\n    ghostwhite: \"f8f8ff\",\r\n    gold: \"ffd700\",\r\n    goldenrod: \"daa520\",\r\n    gray: \"808080\",\r\n    green: \"008000\",\r\n    greenyellow: \"adff2f\",\r\n    grey: \"808080\",\r\n    honeydew: \"f0fff0\",\r\n    hotpink: \"ff69b4\",\r\n    indianred: \"cd5c5c\",\r\n    indigo: \"4b0082\",\r\n    ivory: \"fffff0\",\r\n    khaki: \"f0e68c\",\r\n    lavender: \"e6e6fa\",\r\n    lavenderblush: \"fff0f5\",\r\n    lawngreen: \"7cfc00\",\r\n    lemonchiffon: \"fffacd\",\r\n    lightblue: \"add8e6\",\r\n    lightcoral: \"f08080\",\r\n    lightcyan: \"e0ffff\",\r\n    lightgoldenrodyellow: \"fafad2\",\r\n    lightgray: \"d3d3d3\",\r\n    lightgreen: \"90ee90\",\r\n    lightgrey: \"d3d3d3\",\r\n    lightpink: \"ffb6c1\",\r\n    lightsalmon: \"ffa07a\",\r\n    lightseagreen: \"20b2aa\",\r\n    lightskyblue: \"87cefa\",\r\n    lightslategray: \"789\",\r\n    lightslategrey: \"789\",\r\n    lightsteelblue: \"b0c4de\",\r\n    lightyellow: \"ffffe0\",\r\n    lime: \"0f0\",\r\n    limegreen: \"32cd32\",\r\n    linen: \"faf0e6\",\r\n    magenta: \"f0f\",\r\n    maroon: \"800000\",\r\n    mediumaquamarine: \"66cdaa\",\r\n    mediumblue: \"0000cd\",\r\n    mediumorchid: \"ba55d3\",\r\n    mediumpurple: \"9370db\",\r\n    mediumseagreen: \"3cb371\",\r\n    mediumslateblue: \"7b68ee\",\r\n    mediumspringgreen: \"00fa9a\",\r\n    mediumturquoise: \"48d1cc\",\r\n    mediumvioletred: \"c71585\",\r\n    midnightblue: \"191970\",\r\n    mintcream: \"f5fffa\",\r\n    mistyrose: \"ffe4e1\",\r\n    moccasin: \"ffe4b5\",\r\n    navajowhite: \"ffdead\",\r\n    navy: \"000080\",\r\n    oldlace: \"fdf5e6\",\r\n    olive: \"808000\",\r\n    olivedrab: \"6b8e23\",\r\n    orange: \"ffa500\",\r\n    orangered: \"ff4500\",\r\n    orchid: \"da70d6\",\r\n    palegoldenrod: \"eee8aa\",\r\n    palegreen: \"98fb98\",\r\n    paleturquoise: \"afeeee\",\r\n    palevioletred: \"db7093\",\r\n    papayawhip: \"ffefd5\",\r\n    peachpuff: \"ffdab9\",\r\n    peru: \"cd853f\",\r\n    pink: \"ffc0cb\",\r\n    plum: \"dda0dd\",\r\n    powderblue: \"b0e0e6\",\r\n    purple: \"800080\",\r\n    rebeccapurple: \"663399\",\r\n    red: \"f00\",\r\n    rosybrown: \"bc8f8f\",\r\n    royalblue: \"4169e1\",\r\n    saddlebrown: \"8b4513\",\r\n    salmon: \"fa8072\",\r\n    sandybrown: \"f4a460\",\r\n    seagreen: \"2e8b57\",\r\n    seashell: \"fff5ee\",\r\n    sienna: \"a0522d\",\r\n    silver: \"c0c0c0\",\r\n    skyblue: \"87ceeb\",\r\n    slateblue: \"6a5acd\",\r\n    slategray: \"708090\",\r\n    slategrey: \"708090\",\r\n    snow: \"fffafa\",\r\n    springgreen: \"00ff7f\",\r\n    steelblue: \"4682b4\",\r\n    tan: \"d2b48c\",\r\n    teal: \"008080\",\r\n    thistle: \"d8bfd8\",\r\n    tomato: \"ff6347\",\r\n    turquoise: \"40e0d0\",\r\n    violet: \"ee82ee\",\r\n    wheat: \"f5deb3\",\r\n    white: \"fff\",\r\n    whitesmoke: \"f5f5f5\",\r\n    yellow: \"ff0\",\r\n    yellowgreen: \"9acd32\"\r\n};\r\n\r\n// Make it easy to access colors via `hexNames[hex]`\r\nvar hexNames = tinycolor.hexNames = flip(names);\r\n\r\n\r\n// Utilities\r\n// ---------\r\n\r\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\nfunction flip(o) {\r\n    var flipped = { };\r\n    for (var i in o) {\r\n        if (o.hasOwnProperty(i)) {\r\n            flipped[o[i]] = i;\r\n        }\r\n    }\r\n    return flipped;\r\n}\r\n\r\n// Return a valid alpha value [0,1] with all invalid values being set to 1\r\nfunction boundAlpha(a) {\r\n    a = parseFloat(a);\r\n\r\n    if (isNaN(a) || a < 0 || a > 1) {\r\n        a = 1;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\n// Take input from [0, n] and return it as [0, 1]\r\nfunction bound01(n, max) {\r\n    if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n    var processPercent = isPercentage(n);\r\n    n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n    // Automatically convert percentage into number\r\n    if (processPercent) {\r\n        n = parseInt(n * max, 10) / 100;\r\n    }\r\n\r\n    // Handle floating point rounding errors\r\n    if ((Math.abs(n - max) < 0.000001)) {\r\n        return 1;\r\n    }\r\n\r\n    // Convert into [0, 1] range if it isn't already\r\n    return (n % max) / parseFloat(max);\r\n}\r\n\r\n// Force a number between 0 and 1\r\nfunction clamp01(val) {\r\n    return mathMin(1, mathMax(0, val));\r\n}\r\n\r\n// Parse a base-16 hex value into a base-10 integer\r\nfunction parseIntFromHex(val) {\r\n    return parseInt(val, 16);\r\n}\r\n\r\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\nfunction isOnePointZero(n) {\r\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n}\r\n\r\n// Check to see if string passed in is a percentage\r\nfunction isPercentage(n) {\r\n    return typeof n === \"string\" && n.indexOf('%') != -1;\r\n}\r\n\r\n// Force a hex value to have 2 characters\r\nfunction pad2(c) {\r\n    return c.length == 1 ? '0' + c : '' + c;\r\n}\r\n\r\n// Replace a decimal with it's percentage value\r\nfunction convertToPercentage(n) {\r\n    if (n <= 1) {\r\n        n = (n * 100) + \"%\";\r\n    }\r\n\r\n    return n;\r\n}\r\n\r\n// Converts a decimal to a hex value\r\nfunction convertDecimalToHex(d) {\r\n    return Math.round(parseFloat(d) * 255).toString(16);\r\n}\r\n// Converts a hex value to a decimal\r\nfunction convertHexToDecimal(h) {\r\n    return (parseIntFromHex(h) / 255);\r\n}\r\n\r\nvar matchers = (function() {\r\n\r\n    // <http://www.w3.org/TR/css3-values/#integers>\r\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n    // <http://www.w3.org/TR/css3-values/#number-value>\r\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n    // Actual matching.\r\n    // Parentheses and commas are optional, but not required.\r\n    // Whitespace can take the place of commas or opening paren\r\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n    return {\r\n        CSS_UNIT: new RegExp(CSS_UNIT),\r\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n    };\r\n})();\r\n\r\n// `isValidCSSUnit`\r\n// Take in a single string / number and check to see if it looks like a CSS unit\r\n// (see `matchers` above for definition).\r\nfunction isValidCSSUnit(color) {\r\n    return !!matchers.CSS_UNIT.exec(color);\r\n}\r\n\r\n// `stringInputToObject`\r\n// Permissive string parsing.  Take in a number of formats, and output an object\r\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\nfunction stringInputToObject(color) {\r\n\r\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n    var named = false;\r\n    if (names[color]) {\r\n        color = names[color];\r\n        named = true;\r\n    }\r\n    else if (color == 'transparent') {\r\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n    }\r\n\r\n    // Try to match string input using regular expressions.\r\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n    // Just return an object and let the conversion functions handle that.\r\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n    var match;\r\n    if ((match = matchers.rgb.exec(color))) {\r\n        return { r: match[1], g: match[2], b: match[3] };\r\n    }\r\n    if ((match = matchers.rgba.exec(color))) {\r\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n    }\r\n    if ((match = matchers.hsl.exec(color))) {\r\n        return { h: match[1], s: match[2], l: match[3] };\r\n    }\r\n    if ((match = matchers.hsla.exec(color))) {\r\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n    }\r\n    if ((match = matchers.hsv.exec(color))) {\r\n        return { h: match[1], s: match[2], v: match[3] };\r\n    }\r\n    if ((match = matchers.hsva.exec(color))) {\r\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n    }\r\n    if ((match = matchers.hex8.exec(color))) {\r\n        return {\r\n            r: parseIntFromHex(match[1]),\r\n            g: parseIntFromHex(match[2]),\r\n            b: parseIntFromHex(match[3]),\r\n            a: convertHexToDecimal(match[4]),\r\n            format: named ? \"name\" : \"hex8\"\r\n        };\r\n    }\r\n    if ((match = matchers.hex6.exec(color))) {\r\n        return {\r\n            r: parseIntFromHex(match[1]),\r\n            g: parseIntFromHex(match[2]),\r\n            b: parseIntFromHex(match[3]),\r\n            format: named ? \"name\" : \"hex\"\r\n        };\r\n    }\r\n    if ((match = matchers.hex4.exec(color))) {\r\n        return {\r\n            r: parseIntFromHex(match[1] + '' + match[1]),\r\n            g: parseIntFromHex(match[2] + '' + match[2]),\r\n            b: parseIntFromHex(match[3] + '' + match[3]),\r\n            a: convertHexToDecimal(match[4] + '' + match[4]),\r\n            format: named ? \"name\" : \"hex8\"\r\n        };\r\n    }\r\n    if ((match = matchers.hex3.exec(color))) {\r\n        return {\r\n            r: parseIntFromHex(match[1] + '' + match[1]),\r\n            g: parseIntFromHex(match[2] + '' + match[2]),\r\n            b: parseIntFromHex(match[3] + '' + match[3]),\r\n            format: named ? \"name\" : \"hex\"\r\n        };\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction validateWCAG2Parms(parms) {\r\n    // return valid WCAG2 parms for isReadable.\r\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\r\n    var level, size;\r\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\r\n    level = (parms.level || \"AA\").toUpperCase();\r\n    size = (parms.size || \"small\").toLowerCase();\r\n    if (level !== \"AA\" && level !== \"AAA\") {\r\n        level = \"AA\";\r\n    }\r\n    if (size !== \"small\" && size !== \"large\") {\r\n        size = \"small\";\r\n    }\r\n    return {\"level\":level, \"size\":size};\r\n}\r\n\r\n// Node: Export function\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n    module.exports = tinycolor;\r\n}\r\n// AMD/requirejs: Define the module\r\nelse if (typeof define === 'function' && define.amd) {\r\n    define(function () {return tinycolor;});\r\n}\r\n// Browser: Expose to window\r\nelse {\r\n    window.tinycolor = tinycolor;\r\n}\r\n\r\n})(Math);\r\n"]},"metadata":{},"sourceType":"script"}