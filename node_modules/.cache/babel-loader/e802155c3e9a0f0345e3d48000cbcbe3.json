{"ast":null,"code":"var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n/**\r\n * Pads `string` on the right side if it's shorter than `length`. Padding\r\n * characters are truncated if they exceed `length`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to pad.\r\n * @param {number} [length=0] The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padded string.\r\n * @example\r\n *\r\n * _.padEnd('abc', 6);\r\n * // => 'abc   '\r\n *\r\n * _.padEnd('abc', 6, '_-');\r\n * // => 'abc_-_'\r\n *\r\n * _.padEnd('abc', 3);\r\n * // => 'abc'\r\n */\n\n\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n  var strLength = length ? stringSize(string) : 0;\n  return length && strLength < length ? string + createPadding(length - strLength, chars) : string;\n}\n\nmodule.exports = padEnd;","map":{"version":3,"sources":["C:/Users/wODe/Desktop/School WIE19/Reactkurs/Checkout/checkout-reactjs/node_modules/lodash/padEnd.js"],"names":["createPadding","require","stringSize","toInteger","toString","padEnd","string","length","chars","strLength","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,kBAAD,CAA3B;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CADxB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,aAAD,CAFvB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAHtB;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASI,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AACrCF,EAAAA,MAAM,GAAGF,QAAQ,CAACE,MAAD,CAAjB;AACAC,EAAAA,MAAM,GAAGJ,SAAS,CAACI,MAAD,CAAlB;AAEA,MAAIE,SAAS,GAAGF,MAAM,GAAGL,UAAU,CAACI,MAAD,CAAb,GAAwB,CAA9C;AACA,SAAQC,MAAM,IAAIE,SAAS,GAAGF,MAAvB,GACFD,MAAM,GAAGN,aAAa,CAACO,MAAM,GAAGE,SAAV,EAAqBD,KAArB,CADpB,GAEHF,MAFJ;AAGD;;AAEDI,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["var createPadding = require('./_createPadding'),\r\n    stringSize = require('./_stringSize'),\r\n    toInteger = require('./toInteger'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Pads `string` on the right side if it's shorter than `length`. Padding\r\n * characters are truncated if they exceed `length`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to pad.\r\n * @param {number} [length=0] The padding length.\r\n * @param {string} [chars=' '] The string used as padding.\r\n * @returns {string} Returns the padded string.\r\n * @example\r\n *\r\n * _.padEnd('abc', 6);\r\n * // => 'abc   '\r\n *\r\n * _.padEnd('abc', 6, '_-');\r\n * // => 'abc_-_'\r\n *\r\n * _.padEnd('abc', 3);\r\n * // => 'abc'\r\n */\r\nfunction padEnd(string, length, chars) {\r\n  string = toString(string);\r\n  length = toInteger(length);\r\n\r\n  var strLength = length ? stringSize(string) : 0;\r\n  return (length && strLength < length)\r\n    ? (string + createPadding(length - strLength, chars))\r\n    : string;\r\n}\r\n\r\nmodule.exports = padEnd;\r\n"]},"metadata":{},"sourceType":"script"}