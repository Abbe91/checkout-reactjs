{"ast":null,"code":"'use strict';\n\nvar LIBRARY = require('./_library');\n\nvar $export = require('./_export');\n\nvar redefine = require('./_redefine');\n\nvar hide = require('./_hide');\n\nvar Iterators = require('./_iterators');\n\nvar $iterCreate = require('./_iter-create');\n\nvar setToStringTag = require('./_set-to-string-tag');\n\nvar getPrototypeOf = require('./_object-gpo');\n\nvar ITERATOR = require('./_wks')('iterator');\n\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () {\n  return this;\n};\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype; // Fix native\n\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n\n    $default = function values() {\n      return $native.call(this);\n    };\n  } // Define iterator\n\n\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  } // Plug for library\n\n\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n\n  return methods;\n};","map":{"version":3,"sources":["C:/Users/wODe/Desktop/School WIE19/Reactkurs/Checkout/checkout-reactjs/node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","methods","key","IteratorPrototype","call","Object","name","P","F"],"mappings":"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","sourcesContent":["'use strict';\r\nvar LIBRARY = require('./_library');\r\nvar $export = require('./_export');\r\nvar redefine = require('./_redefine');\r\nvar hide = require('./_hide');\r\nvar Iterators = require('./_iterators');\r\nvar $iterCreate = require('./_iter-create');\r\nvar setToStringTag = require('./_set-to-string-tag');\r\nvar getPrototypeOf = require('./_object-gpo');\r\nvar ITERATOR = require('./_wks')('iterator');\r\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\r\nvar FF_ITERATOR = '@@iterator';\r\nvar KEYS = 'keys';\r\nvar VALUES = 'values';\r\n\r\nvar returnThis = function () { return this; };\r\n\r\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\r\n  $iterCreate(Constructor, NAME, next);\r\n  var getMethod = function (kind) {\r\n    if (!BUGGY && kind in proto) return proto[kind];\r\n    switch (kind) {\r\n      case KEYS: return function keys() { return new Constructor(this, kind); };\r\n      case VALUES: return function values() { return new Constructor(this, kind); };\r\n    } return function entries() { return new Constructor(this, kind); };\r\n  };\r\n  var TAG = NAME + ' Iterator';\r\n  var DEF_VALUES = DEFAULT == VALUES;\r\n  var VALUES_BUG = false;\r\n  var proto = Base.prototype;\r\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\r\n  var $default = $native || getMethod(DEFAULT);\r\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\r\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\r\n  var methods, key, IteratorPrototype;\r\n  // Fix native\r\n  if ($anyNative) {\r\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\r\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\r\n      // Set @@toStringTag to native iterators\r\n      setToStringTag(IteratorPrototype, TAG, true);\r\n      // fix for some old engines\r\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\r\n    }\r\n  }\r\n  // fix Array#{values, @@iterator}.name in V8 / FF\r\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\r\n    VALUES_BUG = true;\r\n    $default = function values() { return $native.call(this); };\r\n  }\r\n  // Define iterator\r\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\r\n    hide(proto, ITERATOR, $default);\r\n  }\r\n  // Plug for library\r\n  Iterators[NAME] = $default;\r\n  Iterators[TAG] = returnThis;\r\n  if (DEFAULT) {\r\n    methods = {\r\n      values: DEF_VALUES ? $default : getMethod(VALUES),\r\n      keys: IS_SET ? $default : getMethod(KEYS),\r\n      entries: $entries\r\n    };\r\n    if (FORCED) for (key in methods) {\r\n      if (!(key in proto)) redefine(proto, key, methods[key]);\r\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\r\n  }\r\n  return methods;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}